---
# tasks file for ansible-role-tripleo-collect-logs

- name: Ensure required rpms for logging are installed
  yum: name={{ item }} state=present
  with_flattened:
    - gzip
    - tar

- name: Set default collect list
  set_fact: collect_list="{{ artcl_collect_list | join(' ') }}"

- name: Override collect list
  set_fact: collect_list="{{ artcl_collect_override[inventory_hostname] | join(' ') }}"
  when: artcl_collect_override is defined and artcl_collect_override[inventory_hostname] is defined

- name: Gather the logs to /tmp
  become: yes
  become_user: root
  shell: >
    mkdir -p /tmp/{{ inventory_hostname }};
    for F in $(ls -d1 /var/log/rpm.list /var/log/extra {{ collect_list }}); do
      cp -rL --parents $F /tmp/{{ inventory_hostname }};
    done;
    find /tmp/{{ inventory_hostname }} -type d -print0 | xargs -0 chmod 755;
    find /tmp/{{ inventory_hostname }} -type f -print0 | xargs -0 chmod 644;
    chown -R {{ ansible_user }}: /tmp/{{ inventory_hostname }};

- name: Compress logs to tar.gz
  shell: >
    chdir=/tmp
    tar czf {{ inventory_hostname }}.tar.gz {{ inventory_hostname }};
  when: not artcl_gzip_only

- name: gzip logs individually and tar them
  shell: >
    chdir=/tmp
    gzip -r ./{{ inventory_hostname }};
    tar cf {{ inventory_hostname }}.tar {{ inventory_hostname }};
  when: artcl_gzip_only

- name: Fetch log archive (tar.gz)
  fetch:
    src: "/tmp/{{ inventory_hostname }}.tar.gz"
    dest: "{{ artcl_collect_dir }}/{{ inventory_hostname }}.tar.gz"
    flat: yes
    validate_checksum: no
  when: not artcl_gzip_only

- name: Fetch log archive (tar)
  fetch:
    src: "/tmp/{{ inventory_hostname }}.tar"
    dest: "{{ artcl_collect_dir }}/{{ inventory_hostname }}.tar"
    flat: yes
    validate_checksum: no
  when: artcl_gzip_only|bool

- name: Delete temporary log directory after collection
  file:
    path: "/tmp/{{ inventory_hostname }}"
    state: absent
  ignore_errors: true

- block:
    - name: Extract the logs
      shell: >
        chdir={{ artcl_collect_dir }}
        tar xf {{ inventory_hostname }}.tar;
      when: artcl_gzip_only|bool

    - name: delete the tar file after extraction
      file:
        path: "{{ artcl_collect_dir }}/{{ inventory_hostname }}.tar"
        state: absent
      when: artcl_gzip_only|bool

  delegate_to: localhost
